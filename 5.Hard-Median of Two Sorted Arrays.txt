/*
Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
The overall run time complexity should be O(log (m+n)).

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.

Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.
*/

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int l1,l2;
	        int i=0;
	        int j=0;
	        int k=0;
	        double res=0;
	        l1=nums1.length;
	        l2=nums2.length;
	        int[] arr=new int[l1+l2]; //declaration of array
	        
	        //Merge array
	        while(i<l1 && j<l2)
	        {
	        	if(nums1[i]<nums2[j])
	        	{
	        		arr[k++]=nums1[i++];
	        	}

	        	else
	        	{
	        		arr[k++]=nums2[j++];
	        	}      
	        }
	        for( ;i<l1;i++)
	        {
	        	arr[k++]=nums1[i];
	        }
	        for( ;j<l2;j++)
	        {
	        	arr[k++]=nums2[j];
	        }
	        //Median of sorted array
	        int len = l1+l2;
	        if(len%2 == 1) {
	        	res = arr[len/2];
	        }else {
	        	res = (arr[len/2-1] + arr[len/2])/2.0;
	        }
	        
	        return res;
    }
}
